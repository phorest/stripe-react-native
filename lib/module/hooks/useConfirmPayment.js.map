{"version":3,"sources":["useConfirmPayment.tsx"],"names":["useConfirmPayment","loading","setLoading","confirmPaymentMethod","confirmPayment","paymentIntentClientSecret","data","options","result"],"mappings":"mWAAA,4BAEA,uCAKO,QAASA,CAAAA,iBAAT,EAA6B,CAClC,cAA8B,oBAAS,KAAT,CAA9B,qDAAOC,OAAP,eAAgBC,UAAhB,eACA,eAAiD,2BAAjD,CAAwBC,oBAAxB,YAAQC,cAAR,CAEA,GAAMA,CAAAA,cAAc,CAAG,uBACrB,iBACEC,yBADF,CAEEC,IAFF,uJAGEC,OAHF,+CAG+C,EAH/C,CAKEL,UAAU,CAAC,IAAD,CAAV,CALF,kDAOuBC,oBAAoB,CACvCE,yBADuC,CAEvCC,IAFuC,CAGvCC,OAHuC,CAP3C,SAOQC,MAPR,eAaEN,UAAU,CAAC,KAAD,CAAV,CAbF,gCAeSM,MAfT,uEADqB,CAkBrB,CAACL,oBAAD,CAlBqB,CAAvB,CAqBA,MAAO,CACLC,cAAc,CAAdA,cADK,CAELH,OAAO,CAAPA,OAFK,CAAP,CAID","sourcesContent":["import { useCallback, useState } from 'react';\nimport type { PaymentMethodCreateParams } from '../types';\nimport { useStripe } from './useStripe';\n\n/**\n * useConfirmPayment hook\n */\nexport function useConfirmPayment() {\n  const [loading, setLoading] = useState(false);\n  const { confirmPayment: confirmPaymentMethod } = useStripe();\n\n  const confirmPayment = useCallback(\n    async (\n      paymentIntentClientSecret: string,\n      data: PaymentMethodCreateParams.Params,\n      options: PaymentMethodCreateParams.Options = {}\n    ) => {\n      setLoading(true);\n\n      const result = await confirmPaymentMethod(\n        paymentIntentClientSecret,\n        data,\n        options\n      );\n\n      setLoading(false);\n\n      return result;\n    },\n    [confirmPaymentMethod]\n  );\n\n  return {\n    confirmPayment,\n    loading,\n  };\n}\n"]}